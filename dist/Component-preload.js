/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "testhanatesthana/Component-preload",
	"modules": {
		"testhanatesthana/controller/Grid.controller.js": "sap.ui.define([\r\n\t\t'jquery.sap.global',\r\n\t\t'sap/ui/core/mvc/Controller',\r\n\t\t'./Formatter',\r\n\t\t'sap/ui/model/json/JSONModel'\r\n\t], function(jQuery, Controller, Formatter, JSONModel) {\r\n\t\"use strict\";\r\n \r\n\tvar GridController = Controller.extend(\"sap.ui.layout.sample.GridTiles.Grid\", {\r\n \r\n\t\tproductItemLink: {\r\n\t\t\t\"large\": [7, 0]\r\n\t\t},\r\n \r\n\t\tonInit: function(oEvent) {\r\n \r\n\t\t\t// set explored app's demo model on this sample\r\n\t\t\tvar oModel = new JSONModel(jQuery.sap.getModulePath(\"sap.ui.demo.mock\", \"/products.json\"));\r\n\t\t\tthis.getView().setModel(oModel);\r\n \r\n\t\t\tvar oView = this.getView();\r\n\t\t\toView.bindElement(\"/ProductCollection\");\r\n \r\n\t\t\t// Link up the products with the item display\r\n\t\t\tfor (var sSize in this.productItemLink) {\r\n\t\t\t\tvar iItemCount = 0;\r\n\t\t\t\tfor (var iItem in this.productItemLink[sSize]) {\r\n\t\t\t\t\toView\r\n\t\t\t\t\t\t.byId([\"productitem\", sSize, iItemCount++].join(\"-\"))\r\n\t\t\t\t\t\t.bindElement(String(this.productItemLink[sSize][iItem]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n \r\n\t});\r\n \r\n \r\n\treturn GridController;\r\n \r\n});",
		"testhanatesthana/controller/settings.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\",\r\n\t\"jquery.sap.storage\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"testhanatesthana.controller.settings\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tonBeforeRendering: function() {\r\n\t\t\tthis.getView().byId(\"Switch1\").setState(jQuery.sap.storage.get(1));\r\n\t\t\tthis.getView().byId(\"Switch2\").setState(jQuery.sap.storage.get(2));\r\n\t\t\tthis.getView().byId(\"Switch3\").setState(jQuery.sap.storage.get(3));\r\n\t\t\t//this.getView().byId(\"Switch4\").setState(jQuery.sap.storage.get(4));\r\n\t\t\t//this.getView().byId(\"Switch5\").setState(jQuery.sap.storage.get(5));\r\n\t\t\tthis.getView().byId(\"Switch6\").setState(jQuery.sap.storage.get(6));\r\n\t\t\tthis.getView().byId(\"Switch7\").setState(jQuery.sap.storage.get(7));\r\n\t\t\tthis.getView().byId(\"Switch8\").setState(jQuery.sap.storage.get(8));\r\n\t\t\tthis.getView().byId(\"Switch9\").setState(jQuery.sap.storage.get(9));\r\n\t\t\t//if (document.getCookie !== undefined) {\r\n\t\t\t\t//this.getView().byId(\"Switch1\").setState(document.getCookie(\"Switch1\"));\r\n\t\t\t//}\r\n\t\t},\r\n\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = History.getInstance();\r\n\t\t\tvar sPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\twindow.history.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t\t\toRouter.navTo(\"page1\", {}, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonSettingChange1: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(1, evt.getSource().getState());\r\n\t\t\t//window.document.reload();\r\n\t\t\t/*jQuery.sap.require(\"sap.m.MessageBox\");\r\n\t\t\tsap.m.MessageBox.show(\r\n\t\t\t\t\"You pressed item: \" + evt.getSource().getState(), {\r\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.INFORMATION,\r\n\t\t\t\t\ttitle: \"It works!\",\r\n\t\t\t\t\tactions: [sap.m.MessageBox.Action.OK]\r\n\t\t\t\t}\r\n\t\t\t);*/\r\n\t\t},\r\n\r\n\t\tonSettingChange2: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(2, evt.getSource().getState());\r\n\t\t},\r\n\r\n\t\tonSettingChange3: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(3, evt.getSource().getState());\r\n\t\t},\r\n\r\n\t\tonSettingChange4: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(4, evt.getSource().getState());\r\n\t\t},\r\n\r\n\t\tonSettingChange5: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(5, evt.getSource().getState());\r\n\t\t},\r\n\r\n\t\tonSettingChange6: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(6, evt.getSource().getState());\r\n\t\t},\r\n\r\n\t\tonSettingChange7: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(7, evt.getSource().getState());\r\n\t\t},\r\n\r\n\t\tonSettingChange8: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(8, evt.getSource().getState());\r\n\t\t},\r\n\r\n\t\tonSettingChange9: function(evt) {\r\n\t\t\tjQuery.sap.storage.put(9, evt.getSource().getState());\r\n\t\t}\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf testhanatesthana.view.settings\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf testhanatesthana.view.settings\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf testhanatesthana.view.settings\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf testhanatesthana.view.settings\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"testhanatesthana/controller/firstConnection.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"jquery.sap.storage\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"testhanatesthana.controller.firstConnection\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t},\r\n\r\n\t\tonToPage1: function() {\r\n\t\t\tjQuery.sap.storage.put(99, \"true\");\r\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page1\");\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf testhanatesthana.view.firstConnection\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf testhanatesthana.view.firstConnection\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf testhanatesthana.view.firstConnection\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf testhanatesthana.view.firstConnection\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"testhanatesthana/controller/JavaSc.controller.js": "sap.ui.define([\n\t\"jquery.sap.global\",\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"jquery.sap.storage\"\n], function(jQuery, Controller, JSONModel) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"testhanatesthana.controller.JavaSc\", {\n\n\t\t\tonInit: function() {\n\t\t\t\t/*\n\t\t\t\twindow.firstRun = 0;\n\t\t\t\twindow.modelsource = \"\";\n\t\t\t\tif (window.firstRun !== 0) {\n\t\t\t\twindow.modelsource = \"/model/airquality.json\";\n\t\t\t\t}\n\t\t\t\twindow.firstRun = 1;\n\t\t\t\t*/\n\t\t\t\twindow.modelsource = \"/model/airquality.json\";\n\t\t\t\tvar modelsource = window.modelsource;\n\t\t\t\t\n\t\t\t\tjQuery.sap.storage.put(12, \"ok\");\n\t\t\t\talert(jQuery.sap.storage.get(12));\n\n\n\t\t\t\tvar oModel = new JSONModel(jQuery.sap.getModulePath(\"testhanatesthana\", modelsource));\n\t\t\t\tthis.getView().setModel(oModel);\n/*\n\t\t\t\t// reuse table sample component\n\t\t\t\tvar oComp = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.m.sample.Table\"\n\t\t\t\t});\n\t\t\t\toComp.setModel(this.getView().getModel());\n\t\t\t\tthis._oTable = oComp.getTable();\n\t\t\t\tthis.getView().byId(\"idIconTabBar\").insertContent(this._oTable);\n\n\t\t\t\t// update table\n\t\t\t\tthis._oTable.setHeaderText(null);\n\t\t\t\tthis._oTable.setShowSeparators(\"Inner\");\n*/\n\t\t\t\t//window.globalAlertSetting = \"pollution\";\n\n\t\t\t\t/*\n\t\t\t\tvar filters;\n\t\t\t\n\t\t\t\tvar searchString = window.globalAlertSetting;\n\t\t\t\tfilters = [new sap.ui.model.Filter(\"\", sap.ui.model.FilterOperator.Contains, searchString)];\n\n\t\t\t\t// update list binding\n\t\t\t\tvar list = this.getView().byId(\"container\");\n\t\t\t\tlist.getBinding(\"TileCollection\").filter(filters);\n\t\t\t\tthis._selectedItemIdx = list.indexOfItem(list.getSelectedItem());\n\t\t\t\t*/\n\t\t\t},\n/*\n\t\thandleIconTabBarSelect: function(oEvent) {\n\t\t\tvar oBinding = this._oTable.getBinding(\"items\"),\n\t\t\t\tsKey = oEvent.getParameter(\"key\"),\n\t\t\t\toFilter;\n\t\t\tif (sKey === \"None\") {\n\t\t\t\toFilter = new Filter(\"infoState\", \"EQ\", \"None\");\n\t\t\t\toBinding.filter([oFilter]);\n\t\t\t} else if (sKey === \"Warning\") {\n\t\t\t\toFilter = new Filter(\"infoState\", \"EQ\", \"Warning\");\n\t\t\t\toBinding.filter([oFilter]);\n\t\t\t} else if (sKey === \"Error\") {\n\t\t\t\toFilter = new Filter(\"infoState\", \"EQ\", \"Error\");\n\t\t\t\toBinding.filter([oFilter]);\n\t\t\t} else {\n\t\t\t\toBinding.filter([]);\n\t\t\t}\n\t\t},\n*/\n\t\tonAfterRendering: function() {\n\t\t\tif (window.firstConnection !== 0) {\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page3\");\n\t\t\t}\n\t\t},\n\n\t\tonToSendAlert: function() {\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page2\");\n\t\t},\n\n\t\tonToSettings: function() {\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page4\");\n\t\t},\n\t\t\n\t\tonToReturn: function() {\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page5\");\n\t\t},\n\n\t\thandleListItemPress: function(evt) {\n\t\t\t// show in a pop-up which list element was pressed\n\t\t\tjQuery.sap.require(\"sap.m.MessageBox\");\n\t\t\tsap.m.MessageBox.show(\n\t\t\t\t\"You pressed item: \" + evt.getSource().jQuery.sap.storage.get(12), {\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.INFORMATION,\n\t\t\t\t\ttitle: \"It works!\",\n\t\t\t\t\tactions: [sap.m.MessageBox.Action.OK]\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n});",
		"testhanatesthana/controller/return.controller.js": "sap.ui.define([\r\n\t\r\n\t\"jquery.sap.global\",\r\n\t\"./Formatter\",\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(jQuery, Formatter, Controller, JSONModel, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"testhanatesthana.controller.return\", {\r\n\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = History.getInstance();\r\n\t\t\tvar sPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\twindow.history.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t\t\toRouter.navTo(\"page1\", {}, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonSettingPress: function(evt) {\r\n\t\t\tjQuery.sap.require(\"sap.m.MessageBox\");\r\n\t\t\tsap.m.MessageBox.show(\r\n\t\t\t\t\"You pressed item: \" + evt.getSource().getState(), {\r\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.INFORMATION,\r\n\t\t\t\t\ttitle: \"It works!\",\r\n\t\t\t\t\tactions: [sap.m.MessageBox.Action.OK]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf testhanatesthana.view.settings\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf testhanatesthana.view.settings\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf testhanatesthana.view.settings\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf testhanatesthana.view.settings\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"testhanatesthana/controller/fragment_enlevement.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"testhanatesthana.controller.fragment_enlevement\", {\r\n\t\t\r\n/*\tvar fragment_enlevement== new sap.ui.commons.Button({\r\n    tap:function(){\r\n          callFunction(oEvent, \"_button4\");*/\r\n    }\r\n});\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf testhanatesthana.view.fragment_enlevement\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf testhanatesthana.view.fragment_enlevement\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf testhanatesthana.view.fragment_enlevement\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf testhanatesthana.view.fragment_enlevement\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"testhanatesthana/controller/View1.controller.js": "sap.ui.define([\n\t\"jquery.sap.global\",\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"jquery.sap.storage\"\n], function(jQuery, Controller, JSONModel) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"testhanatesthana.controller.View1\", {\n\n\t\t\tonInit: function() {\n\t\t\t\t\n\t\t\t\twindow.modelsource = \"\";\n\t\t\t\t//window.firstRun = 1;\n\t\t\t\tif (jQuery.sap.storage.get(99) !== \"true\") {\n\t\t\t\t\tjQuery.sap.storage.put(99, \"false\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twindow.modelsource = \"/model/airqualityNON.json\";\n\t\t\t\tif ((jQuery.sap.storage.get(1) === true && jQuery.sap.storage.get(2) === true) && jQuery.sap.storage.get(9) === true) {\n\t\t\t\t\twindow.modelsource = \"/model/airquality.json\";\n\t\t\t\t} else if (jQuery.sap.storage.get(2) === true && jQuery.sap.storage.get(9) === true) {\n\t\t\t\t\twindow.modelsource = \"/model/airqualityEMPTRA.json\";\n\t\t\t\t}  else if (jQuery.sap.storage.get(9) === true && jQuery.sap.storage.get(1) === true) {\n\t\t\t\t\twindow.modelsource = \"/model/airqualityTRAPOL.json\";\n\t\t\t\t} else if (jQuery.sap.storage.get(1) === true && jQuery.sap.storage.get(2) === true) {\n\t\t\t\t\twindow.modelsource = \"/model/airqualityPOLEMP.json\";\n\t\t\t\t} else if(jQuery.sap.storage.get(2) === true && jQuery.sap.storage.get(9) === true) {\n\t\t\t\t\twindow.modelsource = \"/model/airqualityEMPTRA.json\";\n\t\t\t\t} else if (jQuery.sap.storage.get(9) === true) {\n\t\t\t\t\twindow.modelsource = \"/model/airqualityTRA.json\";\n\t\t\t\t} else if (jQuery.sap.storage.get(1) === true) {\n\t\t\t\t\twindow.modelsource = \"/model/airqualityPOL.json\";\n\t\t\t\t} else if (jQuery.sap.storage.get(2) === true) {\n\t\t\t\t\twindow.modelsource = \"/model/airqualityEMP.json\";\n\t\t\t\t}\n\t\t\t\tvar modelsource  = window.modelsource;\n\t\t\t\tvar oModel = new JSONModel(jQuery.sap.getModulePath(\"testhanatesthana\", modelsource));\n\t\t\t\tthis.getView().setModel(oModel);\n\n/*\n\t\t\t\t// reuse table sample component\n\t\t\t\tvar oComp = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.m.sample.Table\"\n\t\t\t\t});\n\t\t\t\toComp.setModel(this.getView().getModel());\n\t\t\t\tthis._oTable = oComp.getTable();\n\t\t\t\tthis.getView().byId(\"idIconTabBar\").insertContent(this._oTable);\n\n\t\t\t\t// update table\n\t\t\t\tthis._oTable.setHeaderText(null);\n\t\t\t\tthis._oTable.setShowSeparators(\"Inner\");\n\n\t\t\t\t//window.globalAlertSetting = \"pollution\";\n*/\n\t\t\t\t/*\n\t\t\t\tvar filters;\n\t\t\t\n\t\t\t\tvar searchString = window.globalAlertSetting;\n\t\t\t\tfilters = [new sap.ui.model.Filter(\"\", sap.ui.model.FilterOperator.Contains, searchString)];\n\n\t\t\t\t// update list binding\n\t\t\t\tvar list = this.getView().byId(\"container\");\n\t\t\t\tlist.getBinding(\"TileCollection\").filter(filters);\n\t\t\t\tthis._selectedItemIdx = list.indexOfItem(list.getSelectedItem());\n\t\t\t\t*/\n\t\t\t},\n/*\n\t\thandleIconTabBarSelect: function(oEvent) {\n\t\t\tvar oBinding = this._oTable.getBinding(\"items\"),\n\t\t\t\tsKey = oEvent.getParameter(\"key\"),\n\t\t\t\toFilter;\n\t\t\tif (sKey === \"None\") {\n\t\t\t\toFilter = new Filter(\"infoState\", \"EQ\", \"None\");\n\t\t\t\toBinding.filter([oFilter]);\n\t\t\t} else if (sKey === \"Warning\") {\n\t\t\t\toFilter = new Filter(\"infoState\", \"EQ\", \"Warning\");\n\t\t\t\toBinding.filter([oFilter]);\n\t\t\t} else if (sKey === \"Error\") {\n\t\t\t\toFilter = new Filter(\"infoState\", \"EQ\", \"Error\");\n\t\t\t\toBinding.filter([oFilter]);\n\t\t\t} else {\n\t\t\t\toBinding.filter([]);\n\t\t\t}\n\t\t},\n*/\n\t\tonAfterRendering: function() {\n\t\t\t\tif (jQuery.sap.storage.get(99) === \"false\" || jQuery.sap.storage.get(99) === \"undefined\") {\n\t\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page3\");\n\t\t\t\t}\n\t\t},\n\n\t\tonToSendAlert: function() {\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page2\");\n\t\t},\n\n\t\tonToSettings: function() {\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page4\");\n\t\t},\n\t\t\n\t\tonToReturn: function() {\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page5\");\n\t\t},\n\t\t\n\t\tonToTest  : function() {\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page6\");\n\t\t},\n\n\t\thandleListItemPress: function(evt) {\n\t\t\t// show in a pop-up which list element was pressed\n\t\t\tjQuery.sap.require(\"sap.m.MessageBox\");\n\t\t\tsap.m.MessageBox.show(\n\t\t\t\t\"You pressed item: \" + evt.getSource().getBindingContext(), {\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.INFORMATION,\n\t\t\t\t\ttitle: \"It works!\",\n\t\t\t\t\tactions: [sap.m.MessageBox.Action.OK]\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n});",
		"testhanatesthana/controller/pollutionSend.controlleur.js": "sap.ui.define([\r\n\t\"jquery.sap.global\",\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/json/JSONModel\"],\r\n\tfunction(Controller, JSONModel) {\r\n\t\"use strict\";\r\n \r\n\tvar CController = Controller.extend(\"testhanatesthana.controller.kidnappingSend\", {\r\n \r\n\t\tonInit: function () {\r\n\t\t\tvar oModel = new JSONModel({data: {}});\r\n\t\t\tthis.getView().setModel(oModel);\r\n\t\t},\r\n \r\n\t\thandleLiveChange: function(oEvent) {\r\n\t\t\tvar sValue = oEvent.getParameter(\"value\");\r\n\t\t\tthis.getView().byId(\"getValue\").setText(sValue);\r\n\t\t}\r\n\t});\r\n \r\n\treturn CController;\r\n \r\n});",
		"testhanatesthana/controller/kidnappingSend.controller.js": "sap.ui.define([\r\n\t\"jquery.sap.global\",\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/json/JSONModel\"],\r\n\tfunction(Controller, JSONModel) {\r\n\t\"use strict\";\r\n \r\n\tvar CController = Controller.extend(\"testhanatesthana.controller.kidnappingSend\", {\r\n \r\n\t\tonInit: function () {\r\n\t\t\tvar oModel = new JSONModel({data: {}});\r\n\t\t\tthis.getView().setModel(oModel);\r\n\t\t},\r\n \r\n\t\thandleLiveChange: function(oEvent) {\r\n\t\t\tvar sValue = oEvent.getParameter(\"value\");\r\n\t\t\tthis.getView().byId(\"getValue\").setText(sValue);\r\n\t\t}\r\n\t});\r\n \r\n\treturn CController;\r\n \r\n});",
		"testhanatesthana/controller/Formatter.js": "sap.ui.define(function() {\r\n\t\"use strict\";\r\n \r\n\tvar Formatter = {\r\n \r\n\t\tcategoryIcon : function (sValue) {\r\n\t\t\tvar sIcon;\r\n\t\t\tswitch (sValue) {\r\n\t\t\tcase \"Projector\":\r\n\t\t\t\tsIcon = \"sap-icon://projector\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Graphics Card\":\r\n\t\t\t\tsIcon = \"sap-icon://measure\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Accessory\":\r\n\t\t\t\tsIcon = \"sap-icon://widgets\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Printer\":\r\n\t\t\t\tsIcon = \"sap-icon://print\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Monitor\":\r\n\t\t\t\tsIcon = \"sap-icon://sys-monitor\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Laptop\":\r\n\t\t\t\tsIcon = \"sap-icon://laptop\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Keyboard\":\r\n\t\t\t\tsIcon = \"sap-icon://collections-management\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsIcon = \"sap-icon://product\";\r\n\t\t\t}\r\n\t\t\treturn sIcon;\r\n\t\t}\r\n\t};\r\n \r\n\treturn Formatter;\r\n \r\n}, /* bExport= */ true);",
		"testhanatesthana/controller/sendalerts.controller.js": "sap.ui.define([\r\n\t\t'sap/m/MessageBox',\r\n\t\t'sap/ui/core/Fragment',\r\n\t\t'sap/ui/core/mvc/Controller',\r\n\t\t'sap/ui/model/json/JSONModel'\r\n], function(MessageBox, Fragment, Controller, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\tvar CController = Controller.extend(\"testhanatesthana.controller.sendalerts\", {\r\n\r\n\tonToPage1   : function () {\r\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"page1\");\r\n\t},\r\n\t\r\n\tonInit : function() {\r\n\t\t// create any data and a model and set it to the view\r\n\t\tvar oData = {\r\n\t\t\tcheckBox1Text : \"CheckBox\",\r\n\t\t\tcheckBox2Text : \"CheckBox - focused\"\r\n\t\t};\r\n\t\tvar oModel = new JSONModel(oData);\r\n\t\tvar oView = this.getView();\r\n\t\toView.setModel(oModel);\r\n\t},\r\n\thandleInfoMessageBoxPress: function(oEvent) {\r\n\t\tvar bCompact = !!this.getView().$().closest(\".sapUiSizeCompact\").length;\r\n\t\tMessageBox.information(\r\n\t\t\t\"Votre requête a bien été prise en compte. Le Gouvernement Luxembourgeois vous remercie pour votre implication citoyenne.\",\r\n\t\t\t{\r\n\t\t\t\tstyleClass: bCompact? \"sapUiSizeCompact\" : \"\"\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\t\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf testhanatesthana.view.sendalerts\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf testhanatesthana.view.sendalerts\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf testhanatesthana.view.sendalerts\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf testhanatesthana.view.sendalerts\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\treturn CController;\r\n});",
		"testhanatesthana/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n});",
		"testhanatesthana/view/sendalerts.view.xml": "<mvc:View  xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"testhanatesthana.controller.sendalerts\"\r\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\r\n\t<Page\r\n\t\ttitle=\"Signaler\"\r\n\t\tshowNavButton=\"false\"\r\n\t\tnavButtonPress=\"\">\r\n\t\t<headerContent>\r\n\t\t\t<Button icon=\"sap-icon://sys-cancel\" press=\"onToPage1\"/>\r\n\t\t</headerContent>\r\n\t\t<content>\r\n\t\t\t<Button \r\n\t\t\t\t\ticon=\"sap-icon://jam\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alertes Pollution\"\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\">\r\n\t\t    </Button>\r\n\t\t\t<Button \r\n\t\t\t\t\ticon=\"sap-icon://group\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alertes Emploi\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\"\r\n\t\t\t\t\twidth=\"100%\">\r\n\t\t    </Button>\r\n\t\t    <Button \r\n\t\t\t\t\ticon=\"sap-icon://nurse\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alertes Allergie\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\"\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\tariaDescribedBy=\"rejectButtonDescription genericButtonDescription\">\r\n\t\t    </Button>\r\n\t\t    <Button \r\n\t\t\t\t\ticon=\"images/missing.png\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alerte Enlèvement\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\"\r\n\t\t\t\t\twidth=\"100%\">\r\n\t\t    </Button>\r\n\t\t    <Button \r\n\t\t\t\t\ticon=\"sap-icon://e-care\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alertes Catastrophes\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\"\r\n\t\t\t\t\twidth=\"100%\">\r\n\t\t    </Button>\r\n\t\t    <Button \r\n\t\t\t\t\ticon=\"sap-icon://temperature\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alertes Météo\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\"\r\n\t\t\t\t\twidth=\"100%\">\r\n\t\t    </Button>\r\n\t\t    <Button \r\n\t\t\t\t\ticon=\"sap-icon://email-read\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alertes Avis Citoyen\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\"\r\n\t\t\t\t\twidth=\"100%\">\r\n\t\t    </Button>\r\n\t\t\t<Button \r\n\t\t\t\t\ticon=\"sap-icon://sound-loud\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alertes Evénements\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\"\r\n\t\t\t\t\twidth=\"100%\">\r\n\t\t    </Button>\r\n\t\t    <Button \r\n\t\t\t\t\ticon=\"sap-icon://car-rental\"\r\n\t\t\t\t\ttype=\"None\"\r\n\t\t\t\t\ttext=\"Alertes Traffic/Grèves\"\r\n\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\r\n\t\t\t\t\tpress=\"handleInfoMessageBoxPress\"\r\n\t\t\t\t\twidth=\"100%\">\r\n\t\t    </Button>\r\n\t\t</content>\r\n\t</Page>\r\n</mvc:View>",
		"testhanatesthana/view/kidnappingSend.view.xml": "<mvc:View\r\n\tcontrollerName=\"testhanatesthana.controller.kidnappingSend\"\r\n\txmlns:form=\"sap.ui.layout.form\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\t<form:SimpleForm editable=\"true\">\r\n\t\t<Label text=\"Type here\"/>\r\n\t\t<TextArea id=\"TypeHere\"\r\n\t\t\tvalue=\"{/InputValue}\"\r\n\t\t\tvalueLiveUpdate=\"{/ValueLiveUpdate}\"\r\n\t\t\tliveChange=\"handleLiveChange\"\r\n\t\t/>\r\n\t\t<Label text=\"input.getValue()\"/>\r\n\t\t<Text id=\"getValue\" text=\" \"/>\r\n\t\t<Label text=\"model.getProperty()\"/>\r\n\t\t<Text id=\"getProperty\"\r\n\t\t\ttext=\"{/InputValue}\"\r\n\t\t/>\r\n\t</form:SimpleForm>\r\n</mvc:View>",
		"testhanatesthana/view/JavaSc.view.xml": "<mvc:View controllerName=\"testhanatesthana.controller.JavaSc\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:l=\"sap.ui.layout\" xmlns:core=\"sap.ui.core\" displayBlock=\"true\" xmlns=\"sap.m\">\n\t<App id=\"app\">\n\t\t<pages>\n\t\t\t<Page title=\"TITRE 2}\" enableScrolling=\"false\">\n\t\t\t\t<headerContent>\n\t\t\t\t\t<Button text=\"Signaler\" press=\"onToSendAlert\"/>\n\t\t\t\t\t<Button text=\"Configuration\" press=\"onToSettings\"/>\n\t\t\t\t\t<Button text=\"Retour\" press=\"onToReturn\"/>\n\t\t\t\t</headerContent>\n\t\t\t\t<content>\n\t\t\t\t\t<TileContainer id=\"container\" tileDelete=\"handleTileDelete\" tiles=\"{/TileCollection}\">\n\t\t\t\t\t\t<StandardTile icon=\"{icon}\" type=\"{type}\" number=\"{number}\" numberUnit=\"{numberUnit}\" title=\"{title}\" info=\"{info}\" infoState=\"{infoState}\"/>\n\t\t\t\t\t</TileContainer>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"testhanatesthana/view/return.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" \nxmlns:l=\"sap.ui.layout\"\nxmlns:mvc=\"sap.ui.core.mvc\" \nxmlns=\"sap.m\" \ncontrollerName=\"testhanatesthana.controller.return\"\nxmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"Analyse retours clients\" showNavButton=\"true\" navButtonPress=\"onNavBack\">\n\t\t\t\t<content>\n                <Image src=\"images/ecran.jpg\"></Image>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"testhanatesthana/view/pollutionSend.view.xml": "<mvc:View\r\n\tcontrollerName=\"testhanatesthana.controller.pollutionSend\"\r\n\txmlns:form=\"sap.ui.layout.form\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\t<form:SimpleForm editable=\"true\">\r\n\t\t<Label text=\"Type here\"/>\r\n\t\t<TextArea id=\"TypeHere\"\r\n\t\t\tvalue=\"{/InputValue}\"\r\n\t\t\tvalueLiveUpdate=\"{/ValueLiveUpdate}\"\r\n\t\t\tliveChange=\"handleLiveChange\"\r\n\t\t/>\r\n\t\t<Label text=\"input.getValue()\"/>\r\n\t\t<Text id=\"getValue\" text=\" \"/>\r\n\t\t<Label text=\"model.getProperty()\"/>\r\n\t\t<Text id=\"getProperty\"\r\n\t\t\ttext=\"{/InputValue}\"\r\n\t\t/>\r\n\t</form:SimpleForm>\r\n</mvc:View>",
		"testhanatesthana/view/View1.view.xml": "<!--//import view/fragment_enlevement.view.xml-->\n<mvc:View controllerName=\"testhanatesthana.controller.View1\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:l=\"sap.ui.layout\" xmlns:core=\"sap.ui.core\" displayBlock=\"true\" xmlns=\"sap.m\">\n\t<App id=\"app\">\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\" enableScrolling=\"false\">\n\t\t\t\t<headerContent>\n\t\t\t\t\t<Button text=\"Signaler\" press=\"onToSendAlert\"/>\n\t\t\t\t\t<Button text=\"Configuration\" press=\"onToSettings\"/>\n\t\t\t\t</headerContent>\n\t\t\t\t<content>\n\t\t\t\t\t<TileContainer id=\"container\" tileDelete=\"handleTileDelete\" tiles=\"{/TileCollection}\">\n\t\t\t\t\t\t<StandardTile icon=\"{icon}\" type=\"{type}\" number=\"{number}\" numberUnit=\"{numberUnit}\" title=\"{title}\" info=\"{info}\" infoState=\"{infoState}\"/>\n\t\t\t\t\t</TileContainer>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"testhanatesthana/view/fragment_enlevement.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"testhanatesthana.controller.fragment_enlevement\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"Title\">\n\t\t\t\t<content>\n\t\t\t\t\talign=center\n\t\t\t\t\t<Image src=\"images/fragement_enlevement.jpg\"></Image>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"testhanatesthana/view/settings.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"testhanatesthana.controller.settings\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"Configuration\" showNavButton=\"true\" navButtonPress=\"onNavBack\">\n\t\t\t\t<content>\n\t\t\t\t\t<List headerText=\"Sélectionnez les alertes que vous souhaitez recevoir\">\n\t\t\t\t\t\t<InputListItem label=\"Alertes Pollution\">\n\t\t\t\t\t\t\t<Switch state=\"true\" change=\"onSettingChange1\" id=\"Switch1\"/>\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t\t<InputListItem label=\"Alertes Emploi\">\n\t\t\t\t\t\t\t<Switch state=\"true\" change=\"onSettingChange2\" id=\"Switch2\"/>\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t\t<InputListItem label=\"Alertes Allergie\">\n\t\t\t\t\t\t\t<Switch state=\"true\" change=\"onSettingChange3\" id=\"Switch3\"/>\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t\t<InputListItem label=\"Alertes Enlevement\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t\t<InputListItem label=\"Alertes Catastrophes\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t\t<InputListItem label=\"Alertes Météo\">\n\t\t\t\t\t\t\t<Switch state=\"true\" change=\"onSettingChange6\" id=\"Switch6\"/>\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t\t<InputListItem label=\"Alertes Avis Citoyen\">\n\t\t\t\t\t\t\t<Switch state=\"true\" change=\"onSettingChange7\" id=\"Switch7\"/>\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t\t<InputListItem label=\"Alertes Evénements\">\n\t\t\t\t\t\t\t<Switch state=\"true\" change=\"onSettingChange8\" id=\"Switch8\"/>\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t\t\t<InputListItem label=\"Alertes Traffic/Grèves\">\n\t\t\t\t\t\t\t<Switch state=\"true\" change=\"onSettingChange9\" id=\"Switch9\"/>\n\t\t\t\t\t\t</InputListItem>\n\t\t\t\t\t</List>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"testhanatesthana/view/firstConnection.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"testhanatesthana.controller.firstConnection\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<FlexBox height=\"50%\" alignItems=\"Center\" justifyContent=\"Center\">\n\t\t<items>\n\t\t\t<Image src=\"images/LOGO.png\" width=\"300px\" align=\"center\"></Image>\n\t\t</items>\n\t</FlexBox>\n\t<FlexBox height=\"50%\" alignItems=\"Center\" justifyContent=\"Center\">\n\t\t<items>\n\t\t\t<Button text=\"Me connecter\" press=\"onToPage1\"/>\n\t\t</items>\n\t</FlexBox>\n</mvc:View>",
		"testhanatesthana/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"testhanatesthana/model/models\"\n], function(UIComponent, Device, models) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"testhanatesthana.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t\n\t\t\tthis.getRouter().initialize();\n\t\t}\n\t});\n});"
	}
});